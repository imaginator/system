// Air Quality
Number                  AirQuality_AqiLevel              "Air Quality Index"        (gPersistRestarts, gAQI)                                        {channel="airquality:aqi:local:aqiLevel"}
String                  AirQuality_AqiDescription        "AQI Description"          (gPersistRestarts, gAQI)                                        {channel="airquality:aqi:local:aqiDescription"}
Number                  AirQuality_Pm25                  "PM2.5"                    (gPersistRestarts, gAQI)                                        {channel="airquality:aqi:local:pm25"}
Number                  AirQuality_Pm10                  "PM10"                     (gPersistRestarts, gAQI)                                        {channel="airquality:aqi:local:pm10"}
Number                  AirQuality_O3                    "O3"                       (gPersistRestarts, gAQI)                                        {channel="airquality:aqi:local:o3"}
Number                  AirQuality_No2                   "NO2"                      (gPersistRestarts, gAQI)                                        {channel="airquality:aqi:local:no2"}
Number                  AirQuality_Co                    "CO"                       (gPersistRestarts, gAQI)                                        {channel="airquality:aqi:local:co"}
String                  AirQuality_LocationName          "Location"                 (gPersistRestarts, gAQI)                                        {channel="airquality:aqi:local:locationName"}
Location                AirQuality_StationLocation       "Station Location"         (gPersistRestarts, gAQI)                                        {channel="airquality:aqi:local:stationLocation"}
Number                  AirQuality_StationId             "Station ID"               (gPersistRestarts, gAQI)                                        {channel="airquality:aqi:local:stationId"}
DateTime                AirQuality_ObservationTime       "Observation time"         (gPersistRestarts, gAQI)                                        {channel="airquality:aqi:local:observationTime"}
Number:Temperature      AirQuality_Temperature           "Temperature"              (gPersistRestarts, gAQI)                                        {channel="airquality:aqi:local:temperature"}
Number:Pressure         AirQuality_Pressure              "Pressure"                 (gPersistRestarts, gAQI)                                        {channel="airquality:aqi:local:pressure"}
Number:Dimensionless    AirQuality_Humidity              "Humidity"                 (gPersistRestarts, gAQI)                                        {channel="airquality:aqi:local:humidity"}
String                  AirQuality_Dominentpol           "Dominent Polutor"         (gPersistRestarts, gAQI)                                        {channel="airquality:aqi:local:dominentpol"}


// Brightness
Number                  KNXLuminosityLuxBathroomGuest    "brightness [%.1f lux]"    (gPersistRestarts, gBathroomGuestSensors)    ["Light"]          {channel="knx:device:brightness:BathroomGuest"}
Number                  KNXLuminosityLuxBathroomMain     "brightness [%.1f lux]"    (gPersistRestarts, gBathroomMainSensors)     ["Light"]          {channel="knx:device:brightness:BathroomMain"}
Number                  KNXLuminosityLuxBedroom1         "brightness [%.1f lux]"    (gPersistRestarts, gBedroom1Sensors)         ["Light"]          {channel="knx:device:brightness:Bedroom1"}
Number                  KNXLuminosityLuxBedroom2         "brightness [%.1f lux]"    (gPersistRestarts, gBedroom2Sensors)         ["Light"]          {channel="knx:device:brightness:Bedroom2"}
Number                  KNXLuminosityLuxBedroom3         "brightness [%.1f lux]"    (gPersistRestarts, gBedroom3Sensors)         ["Light"]          {channel="knx:device:brightness:Bedroom3"}
Number                  KNXLuminosityLuxHallwayLarge     "brightness [%.1f lux]"    (gPersistRestarts, gHallwayLargeSensors)     ["Light"]          {channel="knx:device:brightness:HallwayLarge"}
Number                  KNXLuminosityLuxHallwaySmall     "brightness [%.1f lux]"    (gPersistRestarts, gHallwaySmallSensors)     ["Light"]          {channel="knx:device:brightness:HallwaySmall"}
Number                  KNXLuminosityLuxKitchen          "brightness [%.1f lux]"    (gPersistRestarts, gKitchenSensors)          ["Light"]          {channel="knx:device:brightness:Kitchen"}
Number                  KNXLuminosityLuxLounge           "brightness [%.1f lux]"    (gPersistRestarts, gLoungeSensors)           ["Light"]          {channel="knx:device:brightness:Lounge"}
Number                  KNXLuminosityLuxStudy            "brightness [%.1f lux]"    (gPersistRestarts, gStudySensors)            ["Light"]          {channel="knx:device:brightness:Study"}

// Waterlogger
Group                   gWaterLogger                     "WaterLogger"              (gEquipment)                           ["Sensor"]

String                  WaterLoggerRestartReason         "Restart Reason"           (gWaterLogger)                                            {channel="mqtt:topic:waterlogger:RestartReason"}
String                  WaterLoggerVersion               "Version"                  (gWaterLogger)                         ["Measurement"]    {channel="mqtt:topic:waterlogger:Version"}
Number                  WaterLoggerRSSI                  "RSSI"                     (gWaterLogger)                         ["Measurement"]    {channel="mqtt:topic:waterlogger:RSSI"}
String                  WaterLoggerWifiDowntime          "Text value"               (gWaterLogger)                                            {channel="mqtt:topic:waterlogger:WifiDowntime"}
Number                  WaterLoggerLoadAvg               "Load Avg"                 (gWaterLogger)                         ["Measurement"]    {channel="mqtt:topic:waterlogger:LoadAvg"}
Number                  WaterLoggerUptime                "Uptime"                   (gWaterLogger)                         ["Measurement"]    {channel="mqtt:topic:waterlogger:Uptime"}
Number                  WaterCounterCold                 "Cold Water Counter"       (gPersistRestarts, gWaterLogger)             ["Measurement"]    {channel="mqtt:topic:waterlogger:WaterCounterCold"}
Number                  WaterCounterHot                  "Hot Water Counter"        (gPersistRestarts, gWaterLogger)             ["Measurement"]    {channel="mqtt:topic:waterlogger:WaterCounterHot"}